@page "/arenas"
@using TbcArenas.Shared.Models
@using TbcArenas.Client.Components
@using TbcArenas.Client.Extensions
@inject IArenasClient Client

<PageTitle>TBC Arenas</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Arena Statistics</MudText>

@if (arenas == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="arenas" Hover="true" SortLabel="Sort By" Elevation="0" FixedHeader="true">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ArenaRecord, object>(x=>x.EndTime)">Date</MudTableSortLabel></MudTh>
            <MudTh>Zone</MudTh>
            <MudTh>Rating</MudTh>
            <MudTh>Comp</MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ArenaRecord, object>(x=>x.Mmr)">MMR</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="End">@context.EndTime.ToShortDateString()</MudTd>
            <MudTd DataLabel="Zone">@context.Zone.ZoneToString()</MudTd>
            <MudTd DataLabel="Rating"><Rating ArenaRecord=@context /></MudTd>
            <MudTd DataLabel="Comp"><Players TeamComp=@context.Team.Players /> vs. <Players TeamComp=@context.EnemyTeam.Players /></MudTd>
            <MudTd DataLabel="MMR">@context.Mmr</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private ICollection<ArenaRecord> arenas;

    protected override async Task OnInitializedAsync()
    {
        arenas = await Client.GetAsync();
    }
}
